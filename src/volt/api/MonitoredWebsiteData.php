<?php
namespace volt\api;

use pocketmine\plugin\PluginBase;
use pocketmine\Server;
use volt\exception\PluginIdentificationException;

class MonitoredWebsiteData extends WebsiteData{

    final public function __construct($name = false){
        if($name == false){
            $trace = debug_backtrace();
            if (isset($trace[1])) {
                $fullClass = explode("\\", $trace[1]['class']);
                $name = array_pop($fullClass);

            }
        }

        if($name instanceof PluginBase) {
            $this->name = $name->getName();
        }
        else{
            if(Server::getInstance()->getPluginManager()->getPlugin($name) instanceof PluginBase){
                $this->name = $name;
            }
        }
        if($this->name == null) throw new PluginIdentificationException;
        $this->getVolt()->getMonitoredDataStore()->createPlugin($this->name);
        parent::__construct();
    }

    public function offsetExists($offset){
        parent::offsetExists($offset); // TODO: Change the autogenerated stub
    }

    public function offsetGet($offset){
        $res = parent::offsetGet($offset);
        $this->getVolt()->getMonitoredDataStore()->addRead($this->name, $offset, $res);
        return $res;
    }

    public function offsetSet($offset, $value){
        parent::offsetSet($offset, $value);
        $this->getVolt()->getMonitoredDataStore()->addRead($this->name, $offset, $value);
    }

    public function offsetUnset($offset){
        parent::offsetUnset($offset); // TODO: Change the autogenerated stub
    }
}